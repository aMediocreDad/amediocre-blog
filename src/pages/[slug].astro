---
import type { MarkdownInstance } from "astro";
import type { Frontmatter } from "./types";

import "@/styles/markdown.css";
import "@fontsource/montserrat/900.css";

import fs from "node:fs";
import BlogLayout from "@/layouts/post-layout.astro";
import { getPostWords, readingTime } from "@/utils/utils";

export async function getStaticPaths() {
  const posts = Object.values(
    import.meta.glob<MarkdownInstance<Frontmatter>>("../content/posts/*.md", {
      eager: true,
    }),
  );

  // Sort posts by date (newest first)
  posts.sort((a, b) => {
    return (
      new Date(b.frontmatter.date).getTime() -
      new Date(a.frontmatter.date).getTime()
    );
  });

  return posts.map((post, index) => {
    const fileContent = fs.readFileSync(post.file, { encoding: "utf8" });

    // Get previous and next posts
    const prevPost = posts[index - 1];
    const nextPost = posts[index + 1];

    return {
      params: {
        slug: post.frontmatter.title,
      },
      props: {
        post,
        fileContent,
        prevPost: prevPost
          ? {
              title: prevPost.frontmatter.title,
              date: prevPost.frontmatter.date,
            }
          : null,
        nextPost: nextPost
          ? {
              title: nextPost.frontmatter.title,
              date: nextPost.frontmatter.date,
            }
          : null,
      },
    };
  });
}

const { Content, frontmatter } = Astro.props.post;
const { fileContent, prevPost, nextPost } = Astro.props;
const words = getPostWords(fileContent);
const readTime = readingTime(words);
---

<BlogLayout prevPost={prevPost} nextPost={nextPost}>
  <article>
    <h1
      class="text-[40px] font-black leading-[44px] text-(--title) font-['Montserrat']"
    >
      {frontmatter.title}
    </h1>
    <p class="mb-6 mt-2 text-[13px] text-gray-700 dark:text-gray-300">
      {new Date(frontmatter.date).toISOString().split("T")[0]}
    </p>

    <!-- <p class="mt-2 text-[13px] text-gray-700 dark:text-gray-300">
      word count: {words}
    </p>
    <p class="mt-2 text-[13px] text-gray-700 dark:text-gray-300">
      estimated reading time: {readTime} minute
    </p> -->
    <div class="markdown mt-10">
      <Content />
    </div>
  </article>
</BlogLayout>
